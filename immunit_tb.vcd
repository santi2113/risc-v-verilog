$date
	Sat May 11 21:34:26 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module immunit_tb $end
$var wire 1 ! typeu $end
$var wire 1 " types $end
$var wire 1 # typej $end
$var wire 1 $ typeb $end
$var wire 1 % special_i $end
$var wire 32 & shamt [31:0] $end
$var wire 1 ' shamflag $end
$var wire 7 ( opcode [6:0] $end
$var wire 1 ) normal_i $end
$var wire 32 * immu [31:0] $end
$var wire 32 + imms [31:0] $end
$var wire 32 , immj [31:0] $end
$var wire 32 - immi [31:0] $end
$var wire 32 . immb [31:0] $end
$var wire 32 / imm [31:0] $end
$var wire 3 0 func3 [2:0] $end
$var reg 32 1 inst [31:0] $end
$scope module uut $end
$var wire 32 2 inst [31:0] $end
$var reg 3 3 func3 [2:0] $end
$var reg 32 4 imm [31:0] $end
$var reg 32 5 immb [31:0] $end
$var reg 32 6 immi [31:0] $end
$var reg 32 7 immj [31:0] $end
$var reg 32 8 imms [31:0] $end
$var reg 32 9 immu [31:0] $end
$var reg 1 ) normal_i $end
$var reg 7 : opcode [6:0] $end
$var reg 1 ' shamflag $end
$var reg 32 ; shamt [31:0] $end
$var reg 1 % special_i $end
$var reg 1 $ typeb $end
$var reg 1 # typej $end
$var reg 1 " types $end
$var reg 1 ! typeu $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 ;
b110111 :
b1100 9
b100 8
b11000 7
b0 6
b100 5
b1100 4
b100 3
b1100001000110111 2
b1100001000110111 1
b100 0
b1100 /
b100 .
b0 -
b11000 ,
b100 +
b1100 *
0)
b110111 (
0'
b0 &
0%
x$
x#
x"
x!
$end
#10
b110 .
b110 5
b110 +
b110 8
b11110 ,
b11110 7
b1111 *
b1111 9
b111 0
b111 3
b10111 (
b10111 :
b1111001100010111 1
b1111001100010111 2
#20
b1111110110111111111110 /
b1111110110111111111110 4
b11111110100110 .
b11111110100110 5
b1111110100111 +
b1111110100111 8
b1111110110111111111110 ,
b1111110110111111111110 7
b11111011011111111111 *
b11111011011111111111 9
b10111 &
b10111 ;
b1111110110111 -
b1111110110111 6
b1101111 (
b1101111 :
b11111011011111111111001111101111 1
b11111011011111111111001111101111 2
#30
b1000011110000000000 /
b1000011110000000000 4
b1000000110 .
b1000000110 5
b1000000110 +
b1000000110 8
b1000011110000000000 ,
b1000011110000000000 7
b100001111000000000 *
b100001111000000000 9
b11110 &
b11110 ;
b1000011110 -
b1000011110 6
b0 0
b0 3
b100001111000000000001101101111 1
b100001111000000000001101101111 2
#40
b1111111000101 /
b1111111000101 4
1)
b11011111000100 .
b11011111000100 5
b1111111000100 +
b1111111000100 8
b1111111000101001100000 ,
b1111111000101001100000 7
b11111100010100110000 *
b11111100010100110000 9
b101 &
b101 ;
b1111111000101 -
b1111111000101 6
b10011 (
b10011 :
b11111100010100110000001000010011 1
b11111100010100110000001000010011 2
#50
b10000001100 /
b10000001100 4
1'
1%
b10000000110 .
b10000000110 5
b10000000110 +
b10000000110 8
b10000001100011001010 ,
b10000001100011001010 7
b1000000110001100101 *
b1000000110001100101 9
b1100 &
b1100 ;
b10000001100 -
b10000001100 6
b101 0
b101 3
b1000000110001100101001100010011 1
b1000000110001100101001100010011 2
#60
b11 /
b11 4
b1000 .
b1000 5
b1000 +
b1000 8
b11011111010 ,
b11011111010 7
b1101111101 *
b1101111101 9
b11 &
b11 ;
b11 -
b11 6
b1101111101010000010011 1
b1101111101010000010011 2
#70
b1100 /
b1100 4
0'
0%
0)
b1100 .
b1100 5
b1100 +
b1100 8
b1000010000 ,
b1000010000 7
b100001000 *
b100001000 9
b1 &
b1 ;
b1 -
b1 6
b0 0
b0 3
b100011 (
b100011 :
b100001000011000100011 1
b100001000011000100011 2
#80
b1111111101111 /
b1111111101111 4
b11111111101110 .
b11111111101110 5
b1111111101111 +
b1111111101111 8
b1111111100001000010000 ,
b1111111100001000010000 7
b11111110000100001000 *
b11111110000100001000 9
b1111111100001 -
b1111111100001 6
b11111110000100001000011110100011 1
b11111110000100001000011110100011 2
#90
b11111111110010 /
b11111111110010 4
b11111111110010 .
b11111111110010 5
b1111111110011 +
b1111111110011 8
b1111111100010000010000 ,
b1111111100010000010000 7
b11111110001000001000 *
b11111110001000001000 9
b10 &
b10 ;
b1111111100010 -
b1111111100010 6
b1100011 (
b1100011 :
b11111110001000001000100111100011 1
b11111110001000001000100111100011 2
#100
b10000010 /
b10000010 4
b10000010 .
b10000010 5
b10000010 +
b10000010 8
b10000010000010000 ,
b10000010000010000 7
b1000001000001000 *
b1000001000001000 9
b10000010 -
b10000010 6
b1000001000001000000101100011 1
b1000001000001000000101100011 2
#110
